@model lionsEventManagement.Models.CreateEventViewModel

<h2>Eventverwaltung</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()

    <h4>Event anlegen</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.EventId)
    <div class="form-horizontal">
        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Title, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Date, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Date, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Date, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Time, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Time, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Time, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AcceptanceEvent, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.AcceptanceEvent, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.AcceptanceEvent, "", new {@class = "text-danger"})
            </div>
        </div>

        @Html.EditorFor(model => model.Address, new {htmlAttributes = new {@class = "form-control"}})

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Description, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Description, "", new {@class = "text-danger"})
            </div>
        </div>

        <!--
        <div>
            %%Datum%%<br/>
            %%Uhrzeit%%
        </div>
        -->
        <div class="form-group">
            @Html.LabelFor(model => model.ReplyDeadline, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.ReplyDeadline, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.ReplyDeadline, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FirstReminderMail, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.FirstReminderMail, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.FirstReminderMail, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SecondReminderMail, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.SecondReminderMail, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.SecondReminderMail, "", new {@class = "text-danger"})
            </div>
        </div>
    </div>
    
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <button type="submit" class="btn btn-default">
                <span class="glyphicon glyphicon-plus"> </span>
                Event anlegen
            </button>
            <a href="@Url.Action("Index")" class="btn btn-default">
                <span class="glyphicon glyphicon-remove"> </span>
                Abbrechen
            </a>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
